name: Generate RSS Feed

on:
  schedule:
    - cron: '0 0 * * *'  # Runs every day at midnight UTC
  workflow_dispatch:  # Allows manual trigger from GitHub UI

jobs:
  generate-rss:
    runs-on: ubuntu-latest  # Using Ubuntu as the base runner for .NET

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up .NET SDK
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'  # Use the version of .NET your project is targeting

      # Step 3: Restore the project dependencies
      - name: Restore dependencies
        run: dotnet restore website-rss-feed.sln  # Adjust with your solution file path

      # Step 4: Build the project
      - name: Build the project
        run: dotnet build website-rss-feed.sln --configuration Release

      # Step 5: Run the GenerateRSS.cs program (assuming it's part of the project)
      - name: Run RSS Generation
        run: dotnet run --project website-rss-feed.csproj  # Path to your .csproj file

      # Step 6: List files to verify RSS file generation
      - name: List files in the repo
        run: |
          ls -R

      # Step 7: Check git status
      - name: Check git status before committing
        run: |
          git status

      # Step 8: Commit and push changes
      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          # Check if the file is tracked by Git
          git add rss.xml  # Ensure correct path
          git diff --exit-code rss.xml || echo "Changes detected"

          # If there are changes, commit and push
          if git diff --exit-code rss.xml; then
            echo "No changes to commit"
          else
            git commit -m "Update RSS feed"
            git push
          fi